# -*- coding: utf-8 -*-
"""
Created on Thu Jan 28 12:10:44 2021

@author: davide
"""
######################################################################
#1. Import packages and function
#######################################################################
from bs4 import BeautifulSoup as BSoup
import urllib.request
from bs4 import BeautifulSoup
from selenium import webdriver
import time
import ssl
from selenium.webdriver.firefox.options import Options    
import urllib.request
import pandas as pd# specify the url
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys
import random
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import itertools
import time


#defining the function to copy the table in the website    
def copy_table_bit(number_country):   
    urlpage = 'https://investmentpolicy.unctad.org/international-investment-agreements/countries/{0}/afghanistan'.format(number_country)
    driver.get(urlpage)
    #Copy data in the web page
    country = driver.find_element_by_class_name("country-info").text
    table=    WebDriverWait(driver, 15).until(EC.presence_of_element_located((By.TAG_NAME , "tbody")))
    bs_obj = BSoup(driver.page_source, 'html.parser')
    body= bs_obj.find('tbody')
    rows= body.find_all('tr')
    file_header=('n' ,'short title', "type", 'status', 'counterparty', 'date_signature', 'entry_into force', 'w1', 'text')
    file_data=[]
    i=0
    while i != len(rows):
        j=0
        file_row=[]
        row_td= rows[i].find_all('td')
        while j != len(row_td):
            datum_text = row_td[j].get_text().replace('.','').strip()
            file_row.append(datum_text)
            j+=1
        file_data.append(file_row)
        i+=1
    i=0
    ##drop empty rows
    file_data=[x for x in file_data if x != []]
    #createdataset
    df = pd.DataFrame(file_data)
    df.columns=file_header
    #report subset of variable
    df=df[['short title', "type", 'status', 'counterparty', 'date_signature', 'entry_into force','text']]
    df.insert(0, "country", country, True)
    return(df, country)


#open firefox from python, set options.headless = True for not showing the browser
options = Options()
options.headless = False
driver = webdriver.Firefox(options=options)
time.sleep(6)

#download all the tables browsing among the different webpages (simply changing the number in the url)
new=copy_table_bit(1)
for i in range(2,237):
    try:
        data, country=copy_table_bit(i)
        new=bit.append(data,  ignore_index=True)
        print('{} BIT downloaded'.format(country))
    except:
        print('{} not downloaded, no table or too much time for answer'.format(country))
        pass

driver.quit()       

#############################################
#2. Add iso code and year to the table
#############################################
## insert iso code for country using dictionary
dictionary = {
"Afghanistan" : "AFG",
"Åland Islands" : "ALA",
"Albania" : "ALB",
"Algeria" : "DZA",
"Andorra" : "AND",
"Angola" : "AGO",
"Anguilla" : "AIA",
"Antigua and Barbuda" : "ATG",
"Argentina" : "ARG",
"Armenia" : "ARM",
"Aruba" : "ABW",
"Australia" : "AUS",
"Austria" : "AUT",
"Azerbaijan" : "AZE",
"Bahamas" : "BHS",
"Bahrain" : "BHR",
"Bangladesh" : "BGD",
"Barbados" : "BRB",
"Belarus" : "BLR",
"Belgium" : "BEL",
"Belize" : "BLZ",
"Benin" : "BEN",
"Bermuda" : "BMU",
"Bhutan" : "BTN",
"Bolivia, Plurinational State of" : "BOL",
"Bosnia and Herzegovina" : "BIH",
"Botswana" : "BWA",
"Brazil" : "BRA",
"British Virgin Islands" : "VGB",
"Brunei Darussalam" : "BRN",
"Bulgaria" : "BGR",
"Burkina Faso" : "BFA",
"Burundi" : "BDI",
"Cambodia" : "KHM",
"Cameroon" : "CMR",
"Canada" : "CAN",
"Cabo Verde" : "CPV",
"Cayman Islands" : "CYM",
"Central African Republic" : "CAF",
"Chad" : "TCD",
"Channel Islands" : "NA",
"Chile" : "CHL",
"China" : "CHN",
"Colombia" : "COL",
"Comoros" : "COM",
"Congo" : "COG",
"Congo, Democratic Republic of the" : "COD",
"Cook Islands" : "COK",
"Costa Rica" : "CRI",
"Côte d'Ivoire" : "CIV",
"Croatia" : "HRV",
"Cuba" : "CUB",
"Curaçao" : "CUW",
"Cyprus" : "CYP",
"Czechia" : "CZE",
"Denmark" : "DNK",
"Djibouti" : "DJI",
"Dominica" : "DMA",
"Dominican Republic" : "DOM",
"Ecuador" : "ECU",
"Egypt" : "EGY",
"El Salvador" : "SLV",
"Equatorial Guinea" : "GNQ",
"Eritrea" : "ERI",
"Estonia" : "EST",
"Ethiopia" : "ETH",
"Faeroe Islands" : "FRO",
"Falkland Islands (Malvinas)" : "FLK",
"Fiji" : "FJI",
"Finland" : "FIN",
"France" : "FRA",
"French Guiana" : "GUF",
"French Polynesia" : "PYF",
"Gabon" : "GAB",
"Gambia, The" : "GMB",
"Georgia" : "GEO",
"Germany" : "DEU",
"Ghana" : "GHA",
"Gibraltar" : "GIB",
"Greece" : "GRC",
"Greenland" : "GRL",
"Grenada" : "GRD",
"Guadeloupe" : "GLP",
"Guam" : "GUM",
"Guatemala" : "GTM",
"Guinea" : "GIN",
"Guinea-Bissau" : "GNB",
"Guyana" : "GUY",
"Haiti" : "HTI",
"Holy See" : "VAT",
"Honduras" : "HND",
"Hong Kong SAR, China" : "HKG",
"Hungary" : "HUN",
"Iceland" : "ISL",
"India" : "IND",
"Indonesia" : "IDN",
"Iran, Islamic Republic of" : "IRN",
"Iraq" : "IRQ",
"Ireland" : "IRL",
"Isle of Man" : "IMN",
"Israel" : "ISR",
"Italy" : "ITA",
"Jamaica" : "JAM",
"Japan" : "JPN",
"Jordan" : "JOR",
"Kazakhstan" : "KAZ",
"Kenya" : "KEN",
"Kiribati" : "KIR",
"Korea, Democratic People's Republic of" : "PRK",
"Korea, Republic of" : "KOR",
#N/A
"Kuwait" : "KWT",
"Kyrgyzstan" : "KGZ",
"Lao People's Democratic Republic" : "LAO",
"Latvia" : "LVA",
"Lebanon" : "LBN",
"Lesotho" : "LSO",
"Liberia" : "LBR",
"Libya" : "LBY",
"Liechtenstein" : "LIE",
"Lithuania" : "LTU",
"Luxembourg" : "LUX",
"Macao SAR, China" : "MAC",
"Madagascar" : "MDG",
"Malawi" : "MWI",
"Malaysia" : "MYS",
"Maldives" : "MDV",
"Mali" : "MLI",
"Malta" : "MLT",
"Marshall Islands" : "MHL",
"Martinique" : "MTQ",
"Mauritania" : "MRT",
"Mauritius" : "MUS",
"Mayotte" : "MYT",
"Mexico" : "MEX",
"Micronesia, Federated States of" : "FSM",
"Moldova, Republic of" : "MDA",
"Monaco" : "MCO",
"Mongolia" : "MNG",
"Montenegro" : "MNE",
"Montserrat" : "MSR",
"Morocco" : "MAR",
"Mozambique" : "MOZ",
"Myanmar" : "MMR",
"Namibia" : "NAM",
"Nauru" : "NRU",
"Nepal" : "NPL",
"Netherlands" : "NLD",
"New Caledonia" : "NCL",
"New Zealand" : "NZL",
"Nicaragua" : "NIC",
"Niger" : "NER",
"Nigeria" : "NGA",
"Niue" : "NIU",
"Norfolk Island" : "NFK",
"Northern Mariana Islands" : "MNP",
"Norway" : "NOR",
"State of Palestine" : "PSE",
"Oman" : "OMN",
"Pakistan" : "PAK",
"Palau" : "PLW",
"Panama" : "PAN",
"Papua New Guinea" : "PNG",
"Paraguay" : "PRY",
"Peru" : "PER",
"Philippines" : "PHL",
"Pitcairn" : "PCN",
"Poland" : "POL",
"Portugal" : "PRT",
"Puerto Rico" : "PRI",
"Qatar" : "QAT",
"Réunion" : "REU",
"Romania" : "ROU",
"Russian Federation" : "RUS",
"Rwanda" : "RWA",
"Saint Helena" : "SHN",
"Saint Kitts and Nevis" : "KNA",
"Saint Lucia" : "LCA",
"Saint Pierre and Miquelon" : "SPM",
"Saint Vincent and the Grenadines" : "VCT",
"Samoa" : "WSM",
"San Marino" : "SMR",
"Sao Tome and Principe" : "STP",
"Saudi Arabia" : "SAU",
"Senegal" : "SEN",
"Serbia" : "SRB",
"Seychelles" : "SYC",
"Sierra Leone" : "SLE",
"Singapore" : "SGP",
"Sint Maarten" : "SXM",
"Slovakia" : "SVK",
"Slovenia" : "SVN",
"Solomon Islands" : "SLB",
"Somalia" : "SOM",
"South Africa" : "ZAF",
"South Sudan" : "SSD",
"Spain" : "ESP",
"Sri Lanka" : "LKA",
"Sudan" : "SDN",
"Suriname" : "SUR",
"Eswatini" : "SWZ",
"Sweden" : "SWE",
"Switzerland" : "CHE",
"Syrian Arab Republic" : "SYR",
"Taiwan, Province of China" : "TWN",
"Tajikistan" : "TJK",
"Thailand" : "THA",
"North Macedonia" : "MKD",
"Timor-Leste" : "TLS",
"Togo" : "TGO",
"Tokelau" : "TKL",
"Tonga" : "TON",
"Trinidad and Tobago" : "TTO",
"Tunisia" : "TUN",
"Turkey" : "TUR",
"Turkmenistan" : "TKM",
"Turks and Caicos Islands" : "TCA",
"Tuvalu" : "TUV",
"Uganda" : "UGA",
"Ukraine" : "UKR",
"United Arab Emirates" : "ARE",
"United Kingdom" : "GBR",
"United Republic of Tanzania" : "TZA",
"United States of America" : "USA",
"Virgin Islands (United States)" : "VIR",
"Uruguay" : "URY",
"Uzbekistan" : "UZB",
"Vanuatu" : "VUT",
"Venezuela, Bolivarian Republic of" : "VEN",
"Viet Nam" : "VNM",
"Wallis and Futuna Islands" : "WLF",
"Yemen" : "YEM",
"Zambia" : "ZMB",
"Zimbabwe" : "ZWE",
"European Union" : "UE" 
        }

##create new column with isocode
bit.insert(0, "country_iso", bit['country'].map(dictionary), True)
bit.insert(6, "counterparty_iso", bit['counterparty'].map(dictionary), True)

#create year_signature column
year=[]
for elem in bit.date_signature:
    year.append(elem[-4:])
bit.insert(7, "year_signature", year, True)

#export data to csv
bit.to_csv('C:\\Users\\davide\\Documents\\BIT\\BIT.csv', index=False)
